//
//  Item.swift
//  iShnakiOS
//
//  Created by Huw Williams on 07/04/2025.
//

// the name of the file and the class was generated by XCode.
import Foundation
import SwiftData

// MARK: - Models
@Model
final class UserData {
    @Attribute(.unique) var date: Date
    // Actuals
    var caloriesConsumed: Int
    var beverageCalories: Int
    var mealCalories: Int
    var snackCalories: Int
    var stepsTaken: Int
    var amountofWater: Int
    var amountofBeverage: Int
    var amountofSnack: Int
    var amountofMeal: Int
    
    init() {
        
        self.date = Calendar.current.startOfDay(for: Date())
        self.caloriesConsumed = 0
        self.beverageCalories = 0
        self.mealCalories = 0
        self.snackCalories = 0
        self.amountofWater = 0
        self.stepsTaken = 0
        self.amountofBeverage = 0
        self.amountofSnack = 0
        self.amountofMeal = 0
    }
}
// fitlers the query so that only today is available.
extension UserData {
    static func todayPredicate() -> Predicate<UserData> {
        let calendar = Calendar.current
        let startOfToday = calendar.startOfDay(for: Date())
        let startOfTomorrow = calendar.date(byAdding: .day, value: 1, to: startOfToday)!

        return #Predicate<UserData> { data in
            data.date >= startOfToday && data.date < startOfTomorrow
        }
    }
}


@Model
final class GoalDefaults {
    var calorieGoal: Int
    var mealGoal: Int
    var snackGoal: Int
    var BeverageGoal: Int
    var waterGoal: Int
    var cupSize: Int
    var waterBottleSize: Int
    var beverageSize: Int
    var mealSize: Int
    var snackSize: Int
    var stepGoal: Int
    
    init() {
        calorieGoal = 0 // daily intake of an adult
        waterGoal = 0 // amount of glasses/bottles drunk in a day
        cupSize = 0 // the size of the water container
        mealGoal = 0 // breakfast/lunch/dinner
        snackGoal = 0 // amount of snacks in a day
        BeverageGoal = 0 // amount of coffee/soda in a day/
        waterBottleSize = 0 // waterbootle size
        beverageSize = 0
        mealSize = 0
        snackSize = 0 // calories
        stepGoal = 0 // this is half the recommended daily step goal.
        
    }
}

@Model
final class UserNotificationSettings {
    var breakfastHour: Int
    var breakfastMin: Int
    var breakfastBool: Bool
    var lunchHour: Int
    var lunchMin: Int
    var lunchBool: Bool
    var dinnerHour: Int
    var dinnerMin: Int
    var dinnerBool: Bool
    var waterReminder: Int
    var waterReminderBool: Bool
    init () {
        breakfastHour = 8 // 8:00
        breakfastMin = 0
        lunchHour = 13 // 13:30
        lunchMin = 30
        dinnerHour = 18// 18:00
        dinnerMin = 0
        waterReminder = 120 // every 2 hours
        breakfastBool = false
        lunchBool = false
        dinnerBool = false
        waterReminderBool = false
    }
}






